/* Automatic generated by DeviceToClazz */

package upnps.api.ctrlpoint.device.mediaserver;

import android.os.Parcel;
import android.util.Log;

import upnp.typedef.device.urn.DeviceType;
import upnps.manager.ctrlpoint.device.AbstractDevice;
import upnp.typedef.device.Device;
import upnp.typedef.device.Service;

public class MediaServer extends AbstractDevice {

    private static final String TAG = MediaServer.class.getSimpleName();

    /**
     * deviceType & serviceType
     */
    public static final DeviceType DEVICE_TYPE = new DeviceType("MediaServer", "1");

    /**
     * serviceId
     */
    public static final String ID_ContentDirectory = "urn:upnp-org:serviceId:ContentDirectory";
    public static final String ID_ConnectionManager = "urn:upnp-org:serviceId:ConnectionManager";

    /**
     * services
     */

    private ContentDirectory _ContentDirectory;
    private ConnectionManager _ConnectionManager;

    public ContentDirectory getContentDirectory() {
        return _ContentDirectory;
    }
    public ConnectionManager getConnectionManager() {
        return _ConnectionManager;
    }

    private static final Object classLock = MediaServer.class;

    public static MediaServer create(Device device) {
        Log.d(TAG, "create");

        synchronized (classLock) {
            MediaServer thiz = new MediaServer(device);

            do {
                if (! DEVICE_TYPE.equals(device.getDeviceType())) {
                    Log.d(TAG, "deviceType invalid: " + device.getDeviceType());
                    thiz = null;
                    break;
                }

                if (! thiz.initialize()) {
                    Log.d(TAG, "initialize failed");
                    thiz = null;
                    break;
                }
            } while (false);

            return thiz;
        }
    }

    private MediaServer(Device device) {
        this.device = device;
    }

    private boolean initialize() {
        boolean ret = false;

        do {
            Service theContentDirectory = device.getService(ID_ContentDirectory);
            if (theContentDirectory == null) {
                Log.d(TAG, "service not found: " + ID_ContentDirectory);
                break;
            }

            Service theConnectionManager = device.getService(ID_ConnectionManager);
            if (theConnectionManager == null) {
                Log.d(TAG, "service not found: " + ID_ConnectionManager);
                break;
            }

            _ContentDirectory = new ContentDirectory(theContentDirectory);
            _ConnectionManager = new ConnectionManager(theConnectionManager);

            ret = true;
        } while (false);

        return ret;
    }

    public static final Creator<MediaServer> CREATOR = new Creator<MediaServer>() {

        @Override
        public MediaServer createFromParcel(Parcel in) {
            return new MediaServer(in);
        }

        @Override
        public MediaServer[] newArray(int size) {
            return new MediaServer[size];
         }
    };

    private MediaServer(Parcel in) {
        readFromParcel(in);
    }

    public void readFromParcel(Parcel in) {
        device = in.readParcelable(Device.class.getClassLoader());
        initialize();
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel out, int flags) {
        out.writeParcelable(device, flags);
    }
}
