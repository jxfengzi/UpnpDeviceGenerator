/* Automatic generated by DeviceToC */

#ifndef __BLEOPERATION_H__
#define __BLEOPERATION_H__

#include "tiny_base.h"
#include "UpnpService.h"
#include "UpnpRuntime.h"

TINY_BEGIN_DECLS

struct _BleOperation;
typedef struct _BleOperation BleOperation;

BleOperation * BleOperation_Create(UpnpService *service, UpnpRuntime *runtime);
void BleOperation_Delete(BleOperation *thiz);

/*------------------------------------------------------------------------
 * Actions 
 *------------------------------------------------------------------------*/

/**
* StartScan
*/
TinyRet BleOperation_StartScan(BleOperation *thiz, char * Fileter,UpnpError *error);

/**
* WriteCharacteristic
*/
TinyRet BleOperation_WriteCharacteristic(BleOperation *thiz, char * BleDevice, char * BleService, char * BleCharacteristic, char * Data,UpnpError *error);

/**
* KeepAlive
*/
TinyRet BleOperation_KeepAlive(BleOperation *thiz, char * BleDevice,UpnpError *error);

/**
* DiscoverServices
*/
TinyRet BleOperation_DiscoverServices(BleOperation *thiz, char * BleDevice,UpnpError *error);

/**
* EnableCharacteristicNotification
*/
TinyRet BleOperation_EnableCharacteristicNotification(BleOperation *thiz, char * BleDevice, char * BleService, char * BleCharacteristic,UpnpError *error);

/**
* ReadCharacteristic
*/
TinyRet BleOperation_ReadCharacteristic(BleOperation *thiz, char * BleDevice, char * BleService, char * BleCharacteristic,UpnpError *error);

/**
* getConnectedDevices
*/
typedef struct _BleOperation_getConnectedDevicesResult {
    bool theRetAvaliableDevices;
} BleOperation_getConnectedDevicesResult;

TinyRet BleOperation_getConnectedDevices(BleOperation *thiz, BleOperation_getConnectedDevicesResult *result,UpnpError *error);

/**
* getAvaliableDevices
*/
typedef struct _BleOperation_getAvaliableDevicesResult {
    bool theRetAvaliableDevices;
} BleOperation_getAvaliableDevicesResult;

TinyRet BleOperation_getAvaliableDevices(BleOperation *thiz, BleOperation_getAvaliableDevicesResult *result,UpnpError *error);

/**
* StopScan
*/
TinyRet BleOperation_StopScan(BleOperation *thiz,UpnpError *error);

/**
* DisableCharacteristicNotification
*/
TinyRet BleOperation_DisableCharacteristicNotification(BleOperation *thiz, char * BleDevice, char * BleService, char * BleCharacteristic,UpnpError *error);

/*------------------------------------------------------------------------
 * Event 
 *------------------------------------------------------------------------*/

typedef void(*BleOperation_SubscriptionExpired)(void *ctx);
typedef void(*BleOperation_CharacteristicReadedChanged)(char * currentValue, void *ctx);
typedef void(*BleOperation_ScanResultChanged)(char * currentValue, void *ctx);
typedef void(*BleOperation_CharacteristicNotifiedChanged)(char * currentValue, void *ctx);
typedef void(*BleOperation_CharacteristicWritedChanged)(char * currentValue, void *ctx);
typedef void(*BleOperation_DiscoveredServicesChanged)(char * currentValue, void *ctx);

typedef struct _BleOperation_EventListener {
    BleOperation_SubscriptionExpired     onSubscriptionExpired;
    BleOperation_CharacteristicReadedChanged     onCharacteristicReadedChanged;
    BleOperation_ScanResultChanged     onScanResultChanged;
    BleOperation_CharacteristicNotifiedChanged     onCharacteristicNotifiedChanged;
    BleOperation_CharacteristicWritedChanged     onCharacteristicWritedChanged;
    BleOperation_DiscoveredServicesChanged     onDiscoveredServicesChanged;
} BleOperation_EventListener;

TinyRet BleOperation_Subscribe(BleOperation *thiz,
    BleOperation_SubscriptionExpired onSubscriptionExpired,
    BleOperation_CharacteristicReadedChanged onCharacteristicReadedChanged,
    BleOperation_ScanResultChanged onScanResultChanged,
    BleOperation_CharacteristicNotifiedChanged onCharacteristicNotifiedChanged,
    BleOperation_CharacteristicWritedChanged onCharacteristicWritedChanged,
    BleOperation_DiscoveredServicesChanged onDiscoveredServicesChanged,
    UpnpError *error,
    void *ctx);

TinyRet BleOperation_Unsubscribe(BleOperation *thiz, UpnpError *error);

TINY_END_DECLS

#endif /* __BLEOPERATION_H__ */