/* Automatic generated by DeviceToClazz */

package upnps.api.host.device.robot;

import android.util.Log;

import miui.upnp.typedef.datatype.DataType;
import miui.upnp.typedef.device.Action;
import miui.upnp.typedef.device.Device;
import miui.upnp.typedef.device.urn.ServiceType;
import miui.upnp.typedef.error.UpnpError;
import miui.upnp.typedef.device.Argument;
import miui.upnp.typedef.device.Service;
import miui.upnp.typedef.device.invocation.ActionInfo;
import miui.upnp.typedef.device.invocation.EventInfo;
import miui.upnp.typedef.device.invocation.EventInfoCreator;
import miui.upnp.typedef.exception.UpnpException;

import miui.upnp.typedef.property.AllowedValueList;
import miui.upnp.typedef.property.AllowedValueRange;
import miui.upnp.typedef.property.PropertyDefinition;
import miui.upnp.manager.UpnpManager;
import miui.upnp.manager.host.ServiceHandler;

public class RobotBind extends ServiceHandler {
    private static final String TAG = "RobotBind";
    private static final ServiceType SERVICE_TYPE =  new ServiceType("RobotBind", "0.1");

    //-------------------------------------------------------
    // Action Names (1)
    //-------------------------------------------------------
    public static final String ACTION_RB_setBindState = "RB_setBindState";
    public static final String _RB_setBindState_ARG_BindState = "BindState";

    //-------------------------------------------------------
    // Property Name (2)
    //-------------------------------------------------------
    public static final String PROPERTY_RB_BindToken = "RB_BindToken";
    public static final String PROPERTY_A_ARG_TYPE_BindState = "A_ARG_TYPE_BindState";

    //-------------------------------------------------------
    // Property value defined (0)
    //-------------------------------------------------------

    //-------------------------------------------------------
    // Action Result (1)
    //-------------------------------------------------------

    // RB_setBindState has no Result


    //-------------------------------------------------------
    // Action Handler (1)
    //-------------------------------------------------------

    public interface Handler {
        UpnpError onRB_setBindState(Integer theBindState);
    }

    private UpnpError handle_RB_setBindState(ActionInfo info) {
        Integer theBindState = (Integer)info.getArgumentValue(_RB_setBindState_ARG_BindState);

        UpnpError error = _handler.onRB_setBindState(theBindState);
        if (! error.equals(UpnpError.OK)) {
            return error;
        }

        return UpnpError.OK;
    }

    //-------------------------------------------------------
    // Method
    //-------------------------------------------------------

    private Service _service;
    private Handler _handler;

    public RobotBind(Device device) throws UpnpException {
        _service = new Service(SERVICE_TYPE);
        _service.setServiceId(toServiceId(SERVICE_TYPE));
        _service.setScpdUrl(toScpdUrl(device.getDeviceId(), SERVICE_TYPE));
        _service.setControlUrl(toCtrlUrl(device.getDeviceId(), SERVICE_TYPE));
        _service.setEventSubUrl(toEventUrl(device.getDeviceId(), SERVICE_TYPE));

        Action _RB_setBindState = new Action(ACTION_RB_setBindState);
        _RB_setBindState.addArgument(new Argument(_RB_setBindState_ARG_BindState, Argument.Direction.IN, PROPERTY_A_ARG_TYPE_BindState));
        _service.addAction(_RB_setBindState);

        PropertyDefinition _RB_BindToken = new PropertyDefinition(PROPERTY_RB_BindToken, DataType.STRING, true);
        _service.addProperty(_RB_BindToken);

        PropertyDefinition _A_ARG_TYPE_BindState = new PropertyDefinition(PROPERTY_A_ARG_TYPE_BindState, DataType.INT, false);
        _service.addProperty(_A_ARG_TYPE_BindState);

        device.addService(_service);
    }

    public void setHandler(Handler handler) {
        _handler = handler;
    }

    @Override
    public UpnpError onAction(ActionInfo info) {
        if (_handler == null) {
           Log.e(TAG, "handler is null");
           return UpnpError.UPNP_ACTION_NOT_IMPLEMENTED;
        }

        if (info.getAction().getName().equals(ACTION_RB_setBindState)) {
            return handle_RB_setBindState(info);
        }

        return UpnpError.UPNP_ACTION_NOT_IMPLEMENTED;
    }

    public void sendEvents() {
        if (! _service.isPropertyChanged()) {
            return;
        }

        EventInfo info = EventInfoCreator.create(_service);

        try {
            UpnpManager.getInstance().getHost().sendEvents(info);
        } catch (UpnpException e) {
            e.printStackTrace();
        }

        _service.cleanPropertyState();
    }

    public void setRB_BindToken(String theRB_BindToken) {
         _service.setPropertyValue(PROPERTY_RB_BindToken, theRB_BindToken);
    }

    public String getRB_BindToken() {
         return (String)_service.getPropertyValue(PROPERTY_RB_BindToken);
    }

    public void setA_ARG_TYPE_BindState(Integer theA_ARG_TYPE_BindState) {
         _service.setPropertyValue(PROPERTY_A_ARG_TYPE_BindState, theA_ARG_TYPE_BindState);
    }

    public Integer getA_ARG_TYPE_BindState() {
         return (Integer)_service.getPropertyValue(PROPERTY_A_ARG_TYPE_BindState);
    }

}
