/* Automatic generated by DeviceToClazz */

package upnps.api.host.device.avserver;

import android.util.Log;

import upnp.typedef.datatype.DataType;
import upnp.typedef.device.Action;
import upnp.typedef.device.Device;
import upnp.typedef.device.urn.ServiceType;
import upnp.typedef.error.UpnpError;
import upnp.typedef.device.Argument;
import upnp.typedef.device.Service;
import upnp.typedef.device.invocation.ActionInfo;
import upnp.typedef.device.invocation.EventInfo;
import upnp.typedef.device.invocation.EventInfoCreator;
import upnp.typedef.exception.UpnpException;

import upnp.typedef.property.AllowedValueList;
import upnp.typedef.property.AllowedValueRange;
import upnp.typedef.property.PropertyDefinition;
import upnps.manager.UpnpManager;
import upnps.manager.host.ServiceHandler;

public class ScreenCast extends ServiceHandler {
    private static final String TAG = "ScreenCast";
    private static final ServiceType SERVICE_TYPE =  new ServiceType("ScreenCast", "1");

    //-------------------------------------------------------
    // Action Names (2)
    //-------------------------------------------------------
    public static final String ACTION_PrepareForCast = "PrepareForCast";
    public static final String _PrepareForCast_ARG_Port = "Port";
    public static final String ACTION_CastComplete = "CastComplete";

    //-------------------------------------------------------
    // Property Name (1)
    //-------------------------------------------------------
    public static final String PROPERTY_RtspServerPort = "RtspServerPort";

    //-------------------------------------------------------
    // Property value defined (0)
    //-------------------------------------------------------

    //-------------------------------------------------------
    // Action Result (2)
    //-------------------------------------------------------

    public class PrepareForCast_Result {
        public Integer thePort;
    }

    // CastComplete has no Result


    //-------------------------------------------------------
    // Action Handler (2)
    //-------------------------------------------------------

    public interface Handler {
        UpnpError onPrepareForCast(PrepareForCast_Result result);
        UpnpError onCastComplete();
    }

    private UpnpError handle_PrepareForCast(ActionInfo info) {
        PrepareForCast_Result result = new PrepareForCast_Result();

        UpnpError error = _handler.onPrepareForCast(result);
        if (! error.equals(UpnpError.OK)) {
            return error;
        }

        if (! info.setArgumentValue(_PrepareForCast_ARG_Port, result.thePort, Argument.Direction.OUT)) {
            Log.d(TAG, "setArgumentValue: false");
            return UpnpError.UPNP_ARGUMENT_VALUE_INVALID;
        }

        return UpnpError.OK;
    }

    private UpnpError handle_CastComplete(ActionInfo info) {

        UpnpError error = _handler.onCastComplete();
        if (! error.equals(UpnpError.OK)) {
            return error;
        }

        return UpnpError.OK;
    }

    //-------------------------------------------------------
    // Method
    //-------------------------------------------------------

    private Service _service;
    private Handler _handler;

    public ScreenCast(Device device) {
        _service = new Service(SERVICE_TYPE);
        _service.setServiceId(toServiceId(SERVICE_TYPE));
        _service.setScpdUrl(toScpdUrl(device.getDeviceId(), SERVICE_TYPE));
        _service.setControlUrl(toCtrlUrl(device.getDeviceId(), SERVICE_TYPE));
        _service.setEventSubUrl(toEventUrl(device.getDeviceId(), SERVICE_TYPE));

        Action _PrepareForCast = new Action(ACTION_PrepareForCast);
        _PrepareForCast.addArgument(new Argument(_PrepareForCast_ARG_Port, Argument.Direction.OUT, PROPERTY_RtspServerPort));
        _service.addAction(_PrepareForCast);

        Action _CastComplete = new Action(ACTION_CastComplete);
        _service.addAction(_CastComplete);

        PropertyDefinition _RtspServerPort = new PropertyDefinition(PROPERTY_RtspServerPort, DataType.INT, false);
        _service.addProperty(_RtspServerPort);

        device.addService(_service);
    }

    public void setHandler(Handler handler) {
        _handler = handler;
    }

    @Override
    public UpnpError onAction(ActionInfo info) {
        if (_handler == null) {
           Log.e(TAG, "handler is null");
           return UpnpError.UPNP_ACTION_NOT_IMPLEMENTED;
        }

        if (info.getAction().getName().equals(ACTION_PrepareForCast)) {
            return handle_PrepareForCast(info);
        }

        if (info.getAction().getName().equals(ACTION_CastComplete)) {
            return handle_CastComplete(info);
        }

        return UpnpError.UPNP_ACTION_NOT_IMPLEMENTED;
    }

    public void sendEvents() {
        EventInfo info = EventInfoCreator.create(_service);

        try {
            UpnpManager.getHost().sendEvents(info);
        } catch (UpnpException e) {
            e.printStackTrace();
        }
    }

}
