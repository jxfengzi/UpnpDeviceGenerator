/* Automatic generated by DeviceToClazz */

package upnps.api.host.device.robot;

import android.util.Log;

import miui.upnp.typedef.datatype.DataType;
import miui.upnp.typedef.device.Action;
import miui.upnp.typedef.device.Device;
import miui.upnp.typedef.device.urn.ServiceType;
import miui.upnp.typedef.error.UpnpError;
import miui.upnp.typedef.device.Argument;
import miui.upnp.typedef.device.Service;
import miui.upnp.typedef.device.invocation.ActionInfo;
import miui.upnp.typedef.device.invocation.EventInfo;
import miui.upnp.typedef.device.invocation.EventInfoCreator;
import miui.upnp.typedef.exception.UpnpException;

import miui.upnp.typedef.property.AllowedValueList;
import miui.upnp.typedef.property.AllowedValueRange;
import miui.upnp.typedef.property.PropertyDefinition;
import miui.upnp.manager.UpnpManager;
import miui.upnp.manager.host.ServiceHandler;

public class RobotVoice extends ServiceHandler {
    private static final String TAG = "RobotVoice";
    private static final ServiceType SERVICE_TYPE =  new ServiceType("RobotVoice", "0.1");

    //-------------------------------------------------------
    // Action Names (2)
    //-------------------------------------------------------
    public static final String ACTION_RB_setVoiceReply = "RB_setVoiceReply";
    public static final String _RB_setVoiceReply_ARG_Reply = "Reply";
    public static final String ACTION_RB_setMetaData = "RB_setMetaData";
    public static final String _RB_setMetaData_ARG_MetaData = "MetaData";

    //-------------------------------------------------------
    // Property Name (5)
    //-------------------------------------------------------
    public static final String PROPERTY_RB_Voice = "RB_Voice";
    public static final String PROPERTY_A_ARG_TYPE_Reply = "A_ARG_TYPE_Reply";
    public static final String PROPERTY_RB_MetaData = "RB_MetaData";
    public static final String PROPERTY_RB_VoiceStart = "RB_VoiceStart";
    public static final String PROPERTY_A_ARG_TYPE_MetaData = "A_ARG_TYPE_MetaData";

    //-------------------------------------------------------
    // Property value defined (0)
    //-------------------------------------------------------

    //-------------------------------------------------------
    // Action Result (2)
    //-------------------------------------------------------

    // RB_setVoiceReply has no Result

    // RB_setMetaData has no Result


    //-------------------------------------------------------
    // Action Handler (2)
    //-------------------------------------------------------

    public interface Handler {
        UpnpError onRB_setVoiceReply(String theReply);
        UpnpError onRB_setMetaData(String theMetaData);
    }

    private UpnpError handle_RB_setVoiceReply(ActionInfo info) {
        String theReply = (String)info.getArgumentValue(_RB_setVoiceReply_ARG_Reply);

        UpnpError error = _handler.onRB_setVoiceReply(theReply);
        if (! error.equals(UpnpError.OK)) {
            return error;
        }

        return UpnpError.OK;
    }

    private UpnpError handle_RB_setMetaData(ActionInfo info) {
        String theMetaData = (String)info.getArgumentValue(_RB_setMetaData_ARG_MetaData);

        UpnpError error = _handler.onRB_setMetaData(theMetaData);
        if (! error.equals(UpnpError.OK)) {
            return error;
        }

        return UpnpError.OK;
    }

    //-------------------------------------------------------
    // Method
    //-------------------------------------------------------

    private Service _service;
    private Handler _handler;

    public RobotVoice(Device device) throws UpnpException {
        _service = new Service(SERVICE_TYPE);
        _service.setServiceId(toServiceId(SERVICE_TYPE));
        _service.setScpdUrl(toScpdUrl(device.getDeviceId(), SERVICE_TYPE));
        _service.setControlUrl(toCtrlUrl(device.getDeviceId(), SERVICE_TYPE));
        _service.setEventSubUrl(toEventUrl(device.getDeviceId(), SERVICE_TYPE));

        Action _RB_setVoiceReply = new Action(ACTION_RB_setVoiceReply);
        _RB_setVoiceReply.addArgument(new Argument(_RB_setVoiceReply_ARG_Reply, Argument.Direction.IN, PROPERTY_A_ARG_TYPE_Reply));
        _service.addAction(_RB_setVoiceReply);

        Action _RB_setMetaData = new Action(ACTION_RB_setMetaData);
        _RB_setMetaData.addArgument(new Argument(_RB_setMetaData_ARG_MetaData, Argument.Direction.IN, PROPERTY_A_ARG_TYPE_MetaData));
        _service.addAction(_RB_setMetaData);

        PropertyDefinition _RB_Voice = new PropertyDefinition(PROPERTY_RB_Voice, DataType.STRING, true);
        _service.addProperty(_RB_Voice);

        PropertyDefinition _A_ARG_TYPE_Reply = new PropertyDefinition(PROPERTY_A_ARG_TYPE_Reply, DataType.STRING, false);
        _service.addProperty(_A_ARG_TYPE_Reply);

        PropertyDefinition _RB_MetaData = new PropertyDefinition(PROPERTY_RB_MetaData, DataType.STRING, true);
        _service.addProperty(_RB_MetaData);

        PropertyDefinition _RB_VoiceStart = new PropertyDefinition(PROPERTY_RB_VoiceStart, DataType.STRING, true);
        _service.addProperty(_RB_VoiceStart);

        PropertyDefinition _A_ARG_TYPE_MetaData = new PropertyDefinition(PROPERTY_A_ARG_TYPE_MetaData, DataType.STRING, false);
        _service.addProperty(_A_ARG_TYPE_MetaData);

        device.addService(_service);
    }

    public void setHandler(Handler handler) {
        _handler = handler;
    }

    @Override
    public UpnpError onAction(ActionInfo info) {
        if (_handler == null) {
           Log.e(TAG, "handler is null");
           return UpnpError.UPNP_ACTION_NOT_IMPLEMENTED;
        }

        if (info.getAction().getName().equals(ACTION_RB_setVoiceReply)) {
            return handle_RB_setVoiceReply(info);
        }

        if (info.getAction().getName().equals(ACTION_RB_setMetaData)) {
            return handle_RB_setMetaData(info);
        }

        return UpnpError.UPNP_ACTION_NOT_IMPLEMENTED;
    }

    public void sendEvents() {
        if (! _service.isPropertyChanged()) {
            return;
        }

        EventInfo info = EventInfoCreator.create(_service);

        try {
            UpnpManager.getInstance().getHost().sendEvents(info);
        } catch (UpnpException e) {
            e.printStackTrace();
        }

        _service.cleanPropertyState();
    }

    public void setRB_Voice(String theRB_Voice) {
         _service.setPropertyValue(PROPERTY_RB_Voice, theRB_Voice);
    }

    public String getRB_Voice() {
         return (String)_service.getPropertyValue(PROPERTY_RB_Voice);
    }

    public void setA_ARG_TYPE_Reply(String theA_ARG_TYPE_Reply) {
         _service.setPropertyValue(PROPERTY_A_ARG_TYPE_Reply, theA_ARG_TYPE_Reply);
    }

    public String getA_ARG_TYPE_Reply() {
         return (String)_service.getPropertyValue(PROPERTY_A_ARG_TYPE_Reply);
    }

    public void setRB_MetaData(String theRB_MetaData) {
         _service.setPropertyValue(PROPERTY_RB_MetaData, theRB_MetaData);
    }

    public String getRB_MetaData() {
         return (String)_service.getPropertyValue(PROPERTY_RB_MetaData);
    }

    public void setRB_VoiceStart(String theRB_VoiceStart) {
         _service.setPropertyValue(PROPERTY_RB_VoiceStart, theRB_VoiceStart);
    }

    public String getRB_VoiceStart() {
         return (String)_service.getPropertyValue(PROPERTY_RB_VoiceStart);
    }

    public void setA_ARG_TYPE_MetaData(String theA_ARG_TYPE_MetaData) {
         _service.setPropertyValue(PROPERTY_A_ARG_TYPE_MetaData, theA_ARG_TYPE_MetaData);
    }

    public String getA_ARG_TYPE_MetaData() {
         return (String)_service.getPropertyValue(PROPERTY_A_ARG_TYPE_MetaData);
    }

}
